[{"/Users/lindeh/OneDrive/Coding/projects/personal-projects/react-experiments-superhi/jiffy/src/index.js":"1","/Users/lindeh/OneDrive/Coding/projects/personal-projects/react-experiments-superhi/jiffy/src/reportWebVitals.js":"2","/Users/lindeh/OneDrive/Coding/projects/personal-projects/react-experiments-superhi/jiffy/src/App.js":"3","/Users/lindeh/OneDrive/Coding/projects/personal-projects/react-experiments-superhi/jiffy/src/Gif.js":"4"},{"size":503,"mtime":1611878256571,"results":"5","hashOfConfig":"6"},{"size":362,"mtime":1611877813469,"results":"7","hashOfConfig":"6"},{"size":2425,"mtime":1612042971927,"results":"8","hashOfConfig":"6"},{"size":679,"mtime":1612043373603,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"fb5k5n",{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"14","messages":"15","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"16"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/lindeh/OneDrive/Coding/projects/personal-projects/react-experiments-superhi/jiffy/src/index.js",[],"/Users/lindeh/OneDrive/Coding/projects/personal-projects/react-experiments-superhi/jiffy/src/reportWebVitals.js",[],"/Users/lindeh/OneDrive/Coding/projects/personal-projects/react-experiments-superhi/jiffy/src/App.js",["19","20"],"import React, {Component} from 'react';\nimport loader from './images/loader.svg';\nimport Gif from './Gif';\n\nconst randomChoice = (arr) => {\n  const randIndex = Math.floor(Math.random() * arr.length);\n  return arr[randIndex];\n};\n\nconst Header = () => (\n  <div className=\"header grid\">\n    <h1 className=\"title\">Jiffy All Day Err Day</h1>\n  </div>\n);\n\nconst UserHint = ({loading, hintText}) => (\n  <div className=\"user-hint\">\n    {loading ? <img src={loader} className=\"block mx-auto\" /> : hintText}\n  </div>\n);\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      searchTerm: '',\n      hintText: '',\n      gif: null,\n      gifs: [],\n    };\n  }\n\n  searchGiphy = async (searchTerm) => {\n    try {\n      const response = await fetch(\n        `https://api.giphy.com/v1/gifs/search?api_key=o7IyuSKkLiR728rSCOE3Pov4refIv10F&q=${searchTerm}&limit=25&offset=0&rating=PG&lang=en`\n      );\n      const {data} = await response.json();\n      const randomGif = randomChoice(data);\n      this.setState((prevState) => ({\n        ...prevState,\n        gif: randomGif,\n        gifs: [...prevState.gifs, randomGif],\n      }));\n    } catch (error) {}\n  };\n\n  handleChange = (event) => {\n    // same thing as const value = event.target.value\n    const {value} = event.target;\n    // setting the new state for searchTerm\n    this.setState((prevState) => ({\n      // take our old props and spread them out\n      ...prevState,\n      // alternate: ...this.state,\n      //overwrite the ones we want after\n      searchTerm: value,\n      hintText: value.length > 2 ? `Hit enter to search for ${value}` : '',\n    }));\n  };\n\n  handleKeyPress = (event) => {\n    const {value} = event.target;\n    if (value.length > 2 && event.key === 'Enter') {\n      this.searchGiphy(value);\n    }\n  };\n\n  render() {\n    // just like const searchTerm = this.state.searchTerm\n    const {searchTerm, gif} = this.state;\n    return (\n      <div className=\"page\">\n        <Header />\n        <div className=\"search grid\">\n          {this.state.gifs.map((gif) => (\n            <Gif {...gif} />\n          ))}\n          <input\n            className=\"input grid-item\"\n            placeholder=\"Type something\"\n            onChange={this.handleChange}\n            onKeyPress={this.handleKeyPress}\n            value={searchTerm}\n          />\n        </div>\n        <UserHint {...this.state} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","/Users/lindeh/OneDrive/Coding/projects/personal-projects/react-experiments-superhi/jiffy/src/Gif.js",[],{"ruleId":"21","severity":1,"message":"22","line":18,"column":16,"nodeType":"23","endLine":18,"endColumn":62},{"ruleId":"24","severity":1,"message":"25","line":71,"column":24,"nodeType":"26","messageId":"27","endLine":71,"endColumn":27},"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unused-vars","'gif' is assigned a value but never used.","Identifier","unusedVar"]